{
    "cart_count.php": "<?php\n// Hook into WooCommerce initialization to ensure cart and wishlist are loaded\nadd_action('wp_footer', 'add_cart_and_wishlist_dot_badge', 20);\n\nfunction add_cart_and_wishlist_dot_badge() {\n    // Ensure WooCommerce is active and cart is loaded\n    if ( class_exists( 'WooCommerce' ) && WC()->cart ) {\n        // Get the cart item count using WooCommerce function\n        $cart_count = WC()->cart->get_cart_contents_count();\n    } else {\n        $cart_count = 0; // Default to 0 if WooCommerce is not active or cart is not loaded\n    }\n\n    // Ensure YITH Wishlist is active and get the wishlist item count\n    if ( class_exists( 'YITH_WCWL' ) ) {\n        $wishlist_count = yith_wcwl_count_products();\n    } else {\n        $wishlist_count = 0; // Default to 0 if YITH Wishlist is not active\n    }\n\n    // Add the badge (dot) for cart and wishlist icons\n    addDotBadge('cart-icon-class', $cart_count);      // Replace 'cart-icon-class' with your cart icon class\n    addDotBadge('wishlist-icon-class', $wishlist_count); // Replace 'wishlist-icon-class' with your wishlist icon class\n}\n\n// Function to add a dot badge on top right corner of the given classes\nfunction addDotBadge($class, $count) {\n    if ($count > 0) {\n        // Output the CSS with a badge on the top-right corner\n        echo \"<style>\n                .{$class}::after {\n                    content: '{$count}';\n                    position: absolute;\n                    top: -15%;\n                    left: -50%;\n                    background-color: #42B9A3;\n                    color: white;\n                    font-size: 1rem;\n                    width: 1.25rem;\n                    height: 1.25rem;\n                    border-radius: 50%;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    z-index: 9999;  /* Ensure it's on top */\n                }\n                @media screen and (max-width : 676px){\n                     .{$class}::after {\n    left: -30%;\n                    }\n                }\n              </style>\";\n    }\n}\n?>\n",
    "creo.php": "<?php\n/*\nPlugin Name: Creo   \nDescription: Our Plugin with PWA Functionality\nVersion: 1.1\nAuthor: Vinay Dangodra\n*/\n\nif (!defined('ABSPATH')) {\n    exit; // Exit if accessed directly\n}\n\n// Define the path to the shortcodes directory\n$shortcodes_dir = plugin_dir_path(__FILE__) . 'shortcodes/';\n\n// Include all shortcode files\nforeach (glob($shortcodes_dir . '*.php') as $file) {\n    require_once $file;\n}\nrequire_once plugin_dir_path(__FILE__) . 'cart_count.php';\n// Enqueue assets (Swiper and custom scripts)\nfunction enqueue_swiper_assets() {\n    wp_enqueue_style('swiper-css', 'https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.css');\n    wp_enqueue_script('swiper-js', 'https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.js', array('jquery'), null, true);\n    wp_enqueue_script('custom-swiper-init', plugin_dir_url(__FILE__) . 'js/swiper-init.js', array('swiper-js'), null, true);\n    wp_enqueue_script('custom-creo-script', plugin_dir_url(__FILE__) . 'js/custom.js', array('custom-swiper-init'), null, true);\n}\nadd_action('wp_enqueue_scripts', 'enqueue_swiper_assets');\n\n// Enqueue custom styles\nfunction enqueue_latest_arrivals_styles() {\n    wp_enqueue_style(\n        'latest-arrivals-styles',\n        plugin_dir_url(__FILE__) . 'css/custom.css',\n        array(),\n        '1.0',\n        'all'\n    );\n}\nadd_action('wp_enqueue_scripts', 'enqueue_latest_arrivals_styles');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Enqueue PWA-related scripts and manifest\nfunction creo_pwa_enqueue_scripts() {\n    // Add the manifest\n    echo '<link rel=\"manifest\" href=\"' . plugin_dir_url(__FILE__) . 'manifest.json\">';\n}\nadd_action('wp_head', 'creo_pwa_enqueue_scripts');\n\n// Register and enqueue the service worker\nfunction register_service_worker() {\n    echo '<script>\n        if (\"serviceWorker\" in navigator) {\n            navigator.serviceWorker.register(\"' . plugin_dir_url(__FILE__) . '/js/sw.js\")\n                .then(function(registration) {\n                    console.log(\"Service Worker registered with scope:\", registration.scope);\n                })\n                .catch(function(error) {\n                    console.log(\"Service Worker registration failed:\", error);\n                });\n        }\n    </script>';\n}\nadd_action('wp_footer', 'register_service_worker');\n\n\n// Generate the manifest.json file\nfunction creo_pwa_generate_manifest() {\n    $manifest = [\n        \"name\" => \"Little Things Cute\",\n        \"short_name\" => \"Creo\",\n        \"start_url\" => \"/\",\n        \"display\" => \"standalone\",\n        \"background_color\" => \"#ffffff\",\n        \"theme_color\" => \"#000000\",\n        \"icons\" => [\n            [\n                \"src\" => plugin_dir_url(__FILE__) . \"icon-192x192.png\",\n                \"sizes\" => \"192x192\",\n                \"type\" => \"image/png\",\n            ],\n            [\n                \"src\" => plugin_dir_url(__FILE__) . \"icon-512x512.png\",\n                \"sizes\" => \"512x512\",\n                \"type\" => \"image/png\",\n            ],\n        ],\n    ];\n\n    $plugin_dir = plugin_dir_path(__FILE__);\n    file_put_contents($plugin_dir . 'manifest.json', json_encode($manifest));\n}\nadd_action('init', 'creo_pwa_generate_manifest');\n\n\n\n\nfunction enqueue_pwa_install_script() {\n    wp_enqueue_script('sw-register', plugin_dir_url(__FILE__) . 'js/sw-register.js', array(), null, true);\n}\nadd_action('wp_enqueue_scripts', 'enqueue_pwa_install_script');\n\n\nfunction add_install_pwa_popup() {\n    echo '\n    <div id=\"install-pwa-popup\" style=\"display: none; position: fixed; bottom: 20px; left: 20px; background-color: white; padding: 15px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); z-index: 1000; border-radius: 8px;\">\n        <p>Would you like to install this app on your device?</p>\n        <button id=\"install-pwa-button\">Install</button>\n        <button id=\"dismiss-pwa-popup\">Dismiss</button>\n    </div>';\n}\nadd_action('wp_footer', 'add_install_pwa_popup');\n\n\n\nfunction add_ios_install_pwa_popup() {\n    echo '\n    <div id=\"install-pwa-popup-ios\" style=\"display: none; position: fixed; bottom: 20px; left: 20px; background-color: white; padding: 15px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); z-index: 1000; border-radius: 8px;\">\n        <p>To install this app on your iPhone, tap the share button in Safari and choose \"Add to Home Screen\".</p>\n        <button id=\"dismiss-pwa-popup-ios\">Dismiss</button>\n    </div>';\n}\nadd_action('wp_footer', 'add_ios_install_pwa_popup');\n\n",
    "js": {
        "pwa-install.js": "let deferredPrompt;\n\nwindow.addEventListener(\"beforeinstallprompt\", (event) => {\n    // Prevent the default mini-infobar from appearing\n    event.preventDefault();\n    deferredPrompt = event;\n\n    // Show your custom install prompt\n    const installButton = document.createElement(\"button\");\n    installButton.textContent = \"Install App\";\n    installButton.style.cssText = `\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        padding: 10px 20px;\n        background-color: #0073aa;\n        color: #fff;\n        border: none;\n        border-radius: 5px;\n        font-size: 16px;\n        cursor: pointer;\n        z-index: 1000;\n    `;\n    document.body.appendChild(installButton);\n\n    installButton.addEventListener(\"click\", () => {\n        // Trigger the install prompt\n        deferredPrompt.prompt();\n\n        // Wait for the user's response\n        deferredPrompt.userChoice.then((choiceResult) => {\n            if (choiceResult.outcome === \"accepted\") {\n                console.log(\"User accepted the install prompt\");\n            } else {\n                console.log(\"User dismissed the install prompt\");\n            }\n            deferredPrompt = null;\n        });\n\n        // Remove the button after interaction\n        installButton.remove();\n    });\n});\n",
        "sw-register.js": "let deferredPrompt;\n\n// Register the service worker\nif (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker\n        .register(\"/wp-content/plugins/creo/js/sw.js\")\n        .then(() => {\n            console.log(\"Service Worker Registered\");\n        })\n        .catch((error) => {\n            console.error(\"Service Worker Registration Failed:\", error);\n        });\n}\n\n// Detect if the user is on iOS\nfunction isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n}\n\n// Show the install prompt for Android/Windows or iOS instructions\nif (isIOS()) {\n    // iOS-specific prompt: Display an instruction for adding the app to the home screen\n    window.addEventListener('load', () => {\n        const installPopup = document.getElementById(\"install-pwa-popup-ios\");\n        if (installPopup) {\n            installPopup.style.display = \"block\";\n        }\n    });\n} else {\n    // For Android/Windows, use the deferred install prompt\n    window.addEventListener('beforeinstallprompt', (e) => {\n        // Prevent the mini-infobar from appearing on mobile\n        e.preventDefault();\n\n        // Save the event to trigger later\n        deferredPrompt = e;\n\n        // Show the install PWA popup\n        const installPopup = document.getElementById(\"install-pwa-popup\");\n        if (installPopup) {\n            installPopup.style.display = \"block\"; // Make the popup visible\n        }\n    });\n}\n\n// Handle the \"Install\" button click\ndocument.getElementById(\"install-pwa-button\")?.addEventListener(\"click\", () => {\n    if (deferredPrompt) {\n        // Show the native install prompt for Android/Windows\n        deferredPrompt.prompt();\n        \n        // Wait for the user's response to the prompt\n        deferredPrompt.userChoice\n            .then((choiceResult) => {\n                if (choiceResult.outcome === \"accepted\") {\n                    console.log(\"User accepted the install prompt\");\n                } else {\n                    console.log(\"User dismissed the install prompt\");\n                }\n                deferredPrompt = null; // Reset the deferred prompt\n            });\n        \n        // Hide the popup after the user responds\n        const installPopup = document.getElementById(\"install-pwa-popup\");\n        if (installPopup) {\n            installPopup.style.display = \"none\";\n        }\n    }\n});\n\n// Handle the \"Dismiss\" button click to hide the popup\ndocument.getElementById(\"dismiss-pwa-popup\")?.addEventListener(\"click\", () => {\n    const installPopup = document.getElementById(\"install-pwa-popup\");\n    if (installPopup) {\n        installPopup.style.display = \"none\"; // Hide the popup if dismissed\n    }\n});\n\n// iOS specific dismiss\ndocument.getElementById(\"dismiss-pwa-popup-ios\")?.addEventListener(\"click\", () => {\n    const installPopup = document.getElementById(\"install-pwa-popup-ios\");\n    if (installPopup) {\n        installPopup.style.display = \"none\"; // Hide the iOS-specific popup if dismissed\n    }\n});\n",
        "sw.js": "const CACHE_NAME = 'creo-pwa-cache-v1';\nconst assetsToCache = [\n    '/',\n    '/index.html', // You can add more assets here that need to be cached\n    '/wp-content/themes/oceanwp/style.css',\n    '/offline.html',\n    '/wp-content/plugins/creo/icon-192x192.png',\n    '/wp-content/plugins/creo/icon-512x512.png',\n    '/wp-content/plugins/creo/js/sw-register.js',\n    '/wp-content/plugins/creo/assets.json',\n];\n\n// Install event: Caches essential files\nself.addEventListener('install', (event) => {\n    event.waitUntil(\n        caches.open(CACHE_NAME).then((cache) => {\n            return cache.addAll(assetsToCache);\n        })\n    );\n});\n\n// Fetch event: Serve cached files or fetch from network if not in cache\nself.addEventListener('fetch', (event) => {\n    event.respondWith(\n        caches.match(event.request).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse; // Serve cached content if available\n            }\n            \n            // If no cache is found, return the offline page\n            return caches.match('/offline.html');\n        }).catch(() => {\n            // If there\u2019s an issue with cache or fetch, serve the offline page as a fallback\n            return caches.match('/offline.html');\n        })\n    );\n});\n\n\n// Activate event: Clean up old caches\nself.addEventListener('activate', (event) => {\n    const cacheWhitelist = [CACHE_NAME];\n    event.waitUntil(\n        caches.keys().then((cacheNames) => {\n            return Promise.all(\n                cacheNames.map((cacheName) => {\n                    if (!cacheWhitelist.includes(cacheName)) {\n                        return caches.delete(cacheName); // Delete old caches\n                    }\n                })\n            );\n        })\n    );\n});\n",
        "swiper-init.js": "document.addEventListener('DOMContentLoaded', function () {\n\n  var recent_swiper = new Swiper(\".custom-recently-viewed-products\", {\n    slidesPerView: 2,\n    spaceBetween: 20,\n    breakpoints: {\n      640: {\n        slidesPerView: 2,\n        spaceBetween: 20,\n      },\n      768: {\n        slidesPerView: 4,\n        spaceBetween: 20,\n      },\n      1024: {\n        slidesPerView: 5,\n        spaceBetween: 20,\n      },\n    },\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n  });\n\n\n  var swiper = new Swiper(\".custom-product-cards\", {\n    slidesPerView: 2,\n    spaceBetween: 20,\n    loop: true,\n    // autoplay: {\n    //   delay: 2500,\n    //   disableOnInteraction: false,\n    // },\n    breakpoints: {\n      640: {\n        slidesPerView: 2,\n        spaceBetween: 20,\n      },\n      768: {\n        slidesPerView: 4,\n        spaceBetween: 20,\n      },\n      1024: {\n        slidesPerView: 4,\n        spaceBetween: 20,\n      },\n    },\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\",\n    },\n  });\n\n\n\n\n\n\n\n});\n\n\n\n\n"
    },
    "manifest.json": "{\"name\":\"Little Things Cute\",\"short_name\":\"Creo\",\"start_url\":\"\\/\",\"display\":\"standalone\",\"background_color\":\"#ffffff\",\"theme_color\":\"#000000\",\"icons\":[{\"src\":\"http:\\/\\/ltc.local\\/wp-content\\/plugins\\/creo\\/icon-192x192.png\",\"sizes\":\"192x192\",\"type\":\"image\\/png\"},{\"src\":\"http:\\/\\/ltc.local\\/wp-content\\/plugins\\/creo\\/icon-512x512.png\",\"sizes\":\"512x512\",\"type\":\"image\\/png\"}]}"
}